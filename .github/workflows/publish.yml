name: Publish to Maven Central

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Enter a tag to publish (e.g., v0.0.5)'
        required: true
        type: string

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag }}

      - name: üîç Validate tag exists
        id: set-tag
        run: |
          echo "üîé Verifying that tag '${{ github.event.inputs.tag }}' exists..."
          git fetch --tags
          if git rev-parse "${{ github.event.inputs.tag }}" >/dev/null 2>&1; then
            echo "‚úÖ Tag found."
            echo "tag=${{ github.event.inputs.tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "‚ùå Tag '${{ github.event.inputs.tag }}' does not exist."
            exit 1
          fi

  publish-core:
    runs-on: ubuntu-latest
    needs: prepare
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag }}

      - name: ‚òï Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle

      - name: üöÄ Publish to Maven Central (core)
        run: |          
          echo "üì¶ Running ./gradlew :core:test..."
          ./gradlew :core:test
          
          echo "üì¶ Running ./gradlew :core:publishAndReleaseToMavenCentral..."
          ./gradlew :core:publishAndReleaseToMavenCentral --no-configuration-cache
          
          echo "‚úÖ Publish completed successfully."

        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

  publish-boot3:
    runs-on: ubuntu-latest
    needs: prepare
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag }}

      - name: ‚òï Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle

      - name: üöÄ Publish to Maven Central (core-boot3)
        run: |          
          echo "üì¶ Running ./gradlew :core-boot3:syncAllBoot3Sources..."
          ./gradlew :core-boot3:syncAllBoot3Sources

          echo "üì¶ Running ./gradlew :core-boot3:test..."
          ./gradlew :core-boot3:test

          echo "üì¶ Running ./gradlew :core-boot3:publishAndReleaseToMavenCentral..."
          ./gradlew :core-boot3:publishAndReleaseToMavenCentral --no-configuration-cache
          
          echo "‚úÖ Publish completed successfully."

        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
