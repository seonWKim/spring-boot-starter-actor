name: Publish to Maven Central

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Enter a tag to publish (e.g., v0.0.5)'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensure full history so we can resolve any tag
          ref: ${{ github.event.inputs.tag }}

      - name: üîç Validate tag exists
        run: |
          echo "üîé Verifying that tag '${{ github.event.inputs.tag }}' exists..."
          git fetch --tags
          if git rev-parse "${{ github.event.inputs.tag }}" >/dev/null 2>&1; then
            echo "‚úÖ Tag found."
          else
            echo "‚ùå Tag '${{ github.event.inputs.tag }}' does not exist."
            exit 1
          fi

      - name: ‚òï Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: gradle

      - name: üß™ Check required secrets
        run: |
          echo "üîê Checking required secrets..."
          [[ -n "$ORG_GRADLE_PROJECT_mavenCentralUsername" ]] || { echo "‚ùå MAVEN_CENTRAL_USERNAME not set"; exit 1; }
          [[ -n "$ORG_GRADLE_PROJECT_mavenCentralPassword" ]] || { echo "‚ùå MAVEN_CENTRAL_PASSWORD not set"; exit 1; }
          [[ -n "$ORG_GRADLE_PROJECT_signingInMemoryKey" ]] || { echo "‚ùå SIGNING_SECRET_KEY not set"; exit 1; }
          [[ -n "$ORG_GRADLE_PROJECT_signingInMemoryKeyPassword" ]] || { echo "‚ùå SIGNING_PASSWORD not set"; exit 1; }
          echo "‚úÖ All required secrets are present."

        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}

      - name: üöÄ Publish to Maven Central (in-memory GPG)
        run: |
          echo "üì¶ Running ./gradlew :core:publishAndReleaseToMavenCentral..."
          ./gradlew :core:publishAndReleaseToMavenCentral --no-configuration-cache
          
          echo "üì¶ Running ./gradlew :core-boot3:publishAndReleaseToMavenCentral..."
          ./gradlew :core-boot3:publishAndReleaseToMavenCentral --no-configuration-cache

          echo "‚úÖ Publish completed successfully."

        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
